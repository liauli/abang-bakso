name: iOS CI Pipeline

on:
  push:
    branches:
      - '*'  # This will trigger the workflow on any branch
  pull_request:
    branches:
      - '*'  # This will trigger the workflow on pull requests targeting any branch

jobs:
  lint:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install SwiftLint
        run: brew install swiftlint
      - name: Run SwiftLint
        run: swiftlint

  test:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' 
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Install XcodeGen
        run: brew install xcodegen

      - name: Generate Xcode project
        run: xcodegen generate

      - name: Run Fastlane tests
        run: bundle exec fastlane unit_tests

  dependency_scan:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Snyk
        run: brew install snyk
      - name: Run Dependency Scan
        run: snyk test

  secret_scan:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install git-secrets
        run: brew install git-secrets
      - name: Run Secret Scan
        run: git secrets --scan

  build_and_archive:
    runs-on: macos-latest
    needs: [lint, test, dependency_scan, secret_scan]  # Ensures all previous jobs succeed
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up CocoaPods
        run: |
          gem install cocoapods
          pod install
      - name: Install Fastlane
        run: brew install fastlane
      - name: Install Xcodegen
        run: brew install xcodegen
      - name: Generate Xcode project with Xcodegen
        run: xcodegen generate
      - name: Build and Archive
        run: fastlane gym --scheme "AbangBakso" --workspace "AbangBakso.xcworkspace" --output_directory "build" --output_name "AbangBakso.ipa"
      
      # Upload the IPA as an artifact
      - name: Upload .ipa as artifact
        uses: actions/upload-artifact@v3
        with:
          name: abang-bakso-ipa
          path: build/AbangBakso.ipa  # Path to your generated .ipa file
